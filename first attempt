
#solve set of linear equations using inverse of a matrix
#AX=B--> X=inv(A)*B
#inv(A)=trans(A)/det(A)



#!/usr/bin/env python
# coding: utf-8

import matplotlib.pyplot as plt
import numpy as np
import math


# In[14]:

a=[[-1,1,1.4,-4.2],[1,0,0,-2],[0,0,-2,3.1],[0,-2.2,0,1]]   #A

x=['x1','x2','x3','x4']   #X (for ref)
b=[-9,-10,6,-3]        #B


a_trans=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]

# to calculate a_transpose

for i in range(4):
    for j in range(4):
        a_trans[i][j]=a[j][i]
        
#Built in fn to calculate the Determinant of a matrix- det|a|

a_det=np.linalg.det(a)

#inv=trans/det

a_inv=a_trans/a_det

# to calculate a_inv*B
for i in range(4):
    s=0
    for j in range(4):
        s=s+(a_inv[i][j]*b[j])
        
    x[i]=s


#to calculate x1+x2+x3+x4
print("x1+x2+x3+x4=", sum(x))

